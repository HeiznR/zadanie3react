{"version":3,"sources":["Components/Modal/Content.module.scss","Pages/MainPage.module.scss","Components/Button/Button.module.scss","Components/Quote/Bar.module.scss","Components/Modal/Wrapper.module.scss","Components/Button/Button.tsx","redux/reducers/fetchingDataReducer.ts","redux/actions/fetchData.ts","hooks/useTypedSelector.ts","hooks/useQuote.ts","Components/Quote/Bar.tsx","Components/Modal/Wrapper.tsx","Components/Modal/Content.tsx","Pages/MainPage.tsx","App.tsx","redux/store.ts","index.tsx"],"names":["module","exports","Button","disabled","value","settingQuotes","className","styles","button","onClick","fetchingDataReducer","createSlice","name","initialState","data","quote","author","massLength","error","isErrorOccured","errorText","activeIndex","prevQuoteIndex","currentQuoteIndex","prevButtonDisabled","reducers","fetchingDataSucces","state","action","payload","length","fetchingDataError","closePopUp","setUpIndices","Math","floor","random","setDisabledPrevQuoteButton","actions","fetchData","createAsyncThunk","url","a","dispatch","axios","get","response","useTypedSelector","useSelector","useQuote","useDispatch","quotesData","fetch","String","process","QuoteBar","useEffect","quoteBar","Modal","children","createPortal","modal","document","body","ModalContent","content","content__message","content__button","MainPage","qoute","qoute__buttons","App","rootReducer","combineReducers","store","configureStore","reducer","middleware","getDefaultMiddleware","concat","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.fbe33f5d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Content_content__3eXJm\",\"content__button\":\"Content_content__button__35GGU\",\"content__message\":\"Content_content__message__CW3Rz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"qoute\":\"MainPage_qoute__2uexp\",\"qoute__buttons\":\"MainPage_qoute__buttons__IsXbg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__TXtAQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quoteBar\":\"Bar_quoteBar__2XVPL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Wrapper_modal__bh2HX\"};","import { FC } from \"react\";\r\nimport { IButton } from \"../../types/IButton\";\r\nimport styles from \"./Button.module.scss\";\r\n\r\nconst Button: FC<IButton> = ({ disabled, value, settingQuotes }) => {\r\n    return (\r\n        <button\r\n            disabled={disabled}\r\n            className={styles.button}\r\n            onClick={() => {\r\n                settingQuotes(value);\r\n            }}\r\n        >\r\n            {value}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { IError } from \"../../types/IError\";\r\nimport { IResponseData } from \"../../types/IResponseData\";\r\n\r\ninterface IProps {\r\n    data: IResponseData[];\r\n    massLength: number;\r\n    error: IError;\r\n    activeIndex: number;\r\n    prevQuoteIndex: number;\r\n    currentQuoteIndex: number;\r\n    prevButtonDisabled: boolean;\r\n}\r\n\r\nconst initialState: IProps = {\r\n    data: [{ quote: \"\", author: \"\" }],\r\n    massLength: 0,\r\n    error: { isErrorOccured: false, errorText: \"\" },\r\n    activeIndex: 0,\r\n    prevQuoteIndex: -1,\r\n    currentQuoteIndex: 0,\r\n    prevButtonDisabled: true,\r\n};\r\n\r\nconst fetchingDataReducer = createSlice({\r\n    name: \"fetchingDataReducer\",\r\n    initialState,\r\n    reducers: {\r\n        fetchingDataSucces(state, action: PayloadAction<IResponseData[]>) {\r\n            state.data = action.payload;\r\n            state.massLength = action.payload.length;\r\n        },\r\n        fetchingDataError(state, action: PayloadAction<string>) {\r\n            state.error.isErrorOccured = true;\r\n            state.error.errorText = action.payload;\r\n        },\r\n        closePopUp(state) {\r\n            state.error.isErrorOccured = false;\r\n        },\r\n        setUpIndices(state, action: PayloadAction<boolean>) {\r\n            action.payload === true\r\n                ? (state.activeIndex = Math.floor(\r\n                      Math.random() * state.data.length\r\n                  ))\r\n                : (state.activeIndex = state.prevQuoteIndex);\r\n            state.prevQuoteIndex = state.currentQuoteIndex;\r\n            state.currentQuoteIndex = state.activeIndex;\r\n        },\r\n        setDisabledPrevQuoteButton(state, action: PayloadAction<boolean>) {\r\n            action.payload === true\r\n                ? (state.prevButtonDisabled = false)\r\n                : (state.prevButtonDisabled = true);\r\n        },\r\n    },\r\n});\r\n\r\nexport default fetchingDataReducer.reducer;\r\nexport const {\r\n    fetchingDataSucces,\r\n    fetchingDataError,\r\n    setUpIndices,\r\n    closePopUp,\r\n    setDisabledPrevQuoteButton,\r\n} = fetchingDataReducer.actions;\r\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { IResponseData } from \"../../types/IResponseData\";\r\nimport {\r\n    fetchingDataError,\r\n    fetchingDataSucces,\r\n    setUpIndices,\r\n} from \"../reducers/fetchingDataReducer\";\r\n\r\nexport const fetchData = createAsyncThunk(\r\n    \"fetchingDataReducer/fetchData\",\r\n    async function (url: string, { dispatch }) {\r\n        try {\r\n            const response = await axios.get<IResponseData[]>(url);\r\n            await dispatch(fetchingDataSucces(response.data));\r\n            await dispatch(setUpIndices(true));\r\n        } catch (error) {\r\n            dispatch(fetchingDataError(\"No data found under this link\"));\r\n        }\r\n    }\r\n);\r\n","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { rootState } from \"../redux/store\";\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<rootState> = useSelector","import { useDispatch } from \"react-redux\";\r\nimport {\r\n    setDisabledPrevQuoteButton,\r\n    setUpIndices,\r\n} from \"../redux/reducers/fetchingDataReducer\";\r\nimport { useTypedSelector } from \"./useTypedSelector\";\r\n\r\nconst useQuote = () => {\r\n    const dispatch = useDispatch();\r\n    const quotesData = useTypedSelector((state) => state.fetch);\r\n    const url = String(process.env.REACT_APP_URL);\r\n    const activeIndex = quotesData.activeIndex;\r\n    const isErrorOccured = quotesData.error.isErrorOccured;\r\n    const prevButtonDisabled = quotesData.prevButtonDisabled;\r\n\r\n    const settingQuotes = (value: string) => {\r\n        if (value === \"New quote\") {\r\n            dispatch(setUpIndices(true));\r\n            dispatch(setDisabledPrevQuoteButton(true));\r\n        } else {\r\n            dispatch(setUpIndices(false));\r\n            dispatch(setDisabledPrevQuoteButton(false));\r\n        }\r\n    };\r\n\r\n    return {\r\n        quotesData,\r\n        isErrorOccured,\r\n        prevButtonDisabled,\r\n        activeIndex,\r\n        url,\r\n        settingQuotes,\r\n        dispatch,\r\n    };\r\n};\r\n\r\nexport default useQuote;\r\n","import { useEffect } from \"react\";\r\nimport { fetchData } from \"../../redux/actions/fetchData\";\r\nimport useQuote from \"../../hooks/useQuote\";\r\nimport styles from \"./Bar.module.scss\";\r\n\r\nconst QuoteBar = () => {\r\n    const { url, dispatch, quotesData, activeIndex } = useQuote();\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchData(url));\r\n    }, [dispatch, url]);\r\n\r\n    return (\r\n        <div className={styles.quoteBar}>\r\n            <div>{`\"${quotesData.data[activeIndex].quote}\"`}</div>\r\n            <div>{quotesData.data[activeIndex].author}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QuoteBar;\r\n","import { FC } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport styles from \"./Wrapper.module.scss\";\r\n\r\nconst Modal: FC = ({ children }) => {\r\n    return createPortal(\r\n        <div className={styles.modal}>{children}</div>,\r\n        document.body\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n","import { FC } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\nimport { closePopUp } from \"../../redux/reducers/fetchingDataReducer\";\r\nimport styles from \"./Content.module.scss\";\r\n\r\nconst ModalContent: FC = () => {\r\n    const dispatch = useDispatch();\r\n    const error = useTypedSelector((state) => state.fetch.error);\r\n    return (\r\n        <div className={styles.content}>\r\n            <div className={styles.content__message}>{error.errorText}</div>\r\n            <button\r\n                className={styles.content__button}\r\n                onClick={() => {\r\n                    dispatch(closePopUp());\r\n                }}\r\n            >\r\n                OK\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModalContent;\r\n","import Button from \"../Components/Button/Button\";\r\nimport QuoteBar from \"../Components/Quote/Bar\";\r\nimport useQuote from \"../hooks/useQuote\";\r\nimport styles from \"./MainPage.module.scss\";\r\nimport ModalWrapper from \"../Components/Modal/Wrapper\";\r\nimport ModalContent from \"../Components/Modal/Content\";\r\n\r\nconst MainPage = () => {\r\n    const { settingQuotes, prevButtonDisabled, isErrorOccured } = useQuote();\r\n    return (\r\n        <div className={styles.qoute}>\r\n            <QuoteBar />\r\n            <div className={styles.qoute__buttons}>\r\n                <Button value=\"New quote\" settingQuotes={settingQuotes} />\r\n                <Button\r\n                    disabled={prevButtonDisabled}\r\n                    value=\"Prev quote\"\r\n                    settingQuotes={settingQuotes}\r\n                />\r\n            </div>\r\n            {isErrorOccured && (\r\n                <ModalWrapper>\r\n                    <ModalContent />\r\n                </ModalWrapper>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainPage;\r\n","import MainPage from \"./Pages/MainPage\";\nimport './app.scss'\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <MainPage />\n        </div>\n    );\n}\n\nexport default App;\n","import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\r\nimport thunk from \"redux-thunk\";\r\nimport fetchingDataReducer from \"./reducers/fetchingDataReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    fetch: fetchingDataReducer,\r\n});\r\nexport type rootState = ReturnType<typeof rootReducer>;\r\nexport const store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(thunk),\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}